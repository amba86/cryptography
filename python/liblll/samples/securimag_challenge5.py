from liblll import *

pubkey = [964266105338945, 6749864515101946, 964264861986975, 13499727318176232, 17356789956975810,3857053002628327, 12535438500695219, 10606879723866753, 10606828405887831, 16392324024362666, 13499318722439347, 7713307812454905, 6748217527825207, 6746569486347068, 8671806553725916, 2879615947706164, 18294696345811439, 6697131932913639, 15322796985338016, 753333165640954, 16934930158297044, 10727464396496856, 8919464717468072, 12053330796850461]

my_sum = [85665597416613316, 68924182376697138, 93855260302436631, 67069112787809230, 67823425594155918, 96038092151406072, 88581012026674643, 87131275443855194, 92447984720405935, 78684146336120268, 52303820625741832, 85294112192719803, 48802767159478973, 93706609509995531, 143147771785836836, 79544023096864593, 118984178180084169, 66881447736363380, 83048004789685724]


f = open("solution", "w")
for the_sum in my_sum:
    mat = create_matrix_from_knapsack(pubkey, the_sum)
    mat_red = lll_reduction(mat)
    best_vector = best_vect_knapsack(mat_red)
    str_best_vector = "".join(map(str, best_vector))
    my_str = "".join(chr(int(str_best_vector[i:i+8], 2)) for i in range(0, len(pubkey), 8))
    f.write(my_str)
    print(best_vector)

f.close()
